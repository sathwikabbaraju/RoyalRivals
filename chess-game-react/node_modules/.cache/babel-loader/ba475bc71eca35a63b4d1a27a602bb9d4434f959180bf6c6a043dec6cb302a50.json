{"ast":null,"code":"var _jsxFileName = \"/Users/sathwik/VISUAL STUDIO CODE/Streamlit/ChessGame/chess-game-react/src/Board.js\",\n  _s = $RefreshSig$();\n// Board.js\nimport React, { useState, useEffect } from 'react';\nimport io from 'socket.io-client';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst socket = io('http://localhost:5000');\nconst Board = () => {\n  _s();\n  const [board, setBoard] = useState([]);\n  useEffect(() => {\n    fetchBoardState();\n    socket.on('board_update', data => {\n      setBoard(data.board);\n    });\n    socket.on('invalid_move', error => {\n      console.error('Invalid move:', error);\n      // Handle invalid move feedback to the user\n    });\n    return () => {\n      socket.disconnect();\n    };\n  }, []);\n  const fetchBoardState = async () => {\n    try {\n      const response = await fetch('http://localhost:5000/board');\n      const data = await response.json();\n      setBoard(data.board);\n    } catch (error) {\n      console.error('Error fetching board state:', error);\n    }\n  };\n  const handleSquareClick = async (row, col) => {\n    socket.emit('move', {\n      source: `${selectedSquare.row}-${selectedSquare.col}`,\n      target: `${row}-${col}`\n    });\n  };\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"board\",\n    children: board.map((row, rowIndex) => /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"row\",\n      children: row.map((piece, colIndex) => /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"square\",\n        onClick: () => handleSquareClick(rowIndex, colIndex),\n        children: piece\n      }, `${rowIndex}-${colIndex}`, false, {\n        fileName: _jsxFileName,\n        lineNumber: 46,\n        columnNumber: 25\n      }, this))\n    }, rowIndex, false, {\n      fileName: _jsxFileName,\n      lineNumber: 44,\n      columnNumber: 17\n    }, this))\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 42,\n    columnNumber: 9\n  }, this);\n};\n_s(Board, \"jMNr9OUCnGXRnWCrgJjYZl+B82M=\");\n_c = Board;\nexport default Board;\nvar _c;\n$RefreshReg$(_c, \"Board\");","map":{"version":3,"names":["React","useState","useEffect","io","jsxDEV","_jsxDEV","socket","Board","_s","board","setBoard","fetchBoardState","on","data","error","console","disconnect","response","fetch","json","handleSquareClick","row","col","emit","source","selectedSquare","target","className","children","map","rowIndex","piece","colIndex","onClick","fileName","_jsxFileName","lineNumber","columnNumber","_c","$RefreshReg$"],"sources":["/Users/sathwik/VISUAL STUDIO CODE/Streamlit/ChessGame/chess-game-react/src/Board.js"],"sourcesContent":["// Board.js\nimport React, { useState, useEffect } from 'react';\nimport io from 'socket.io-client';\n\nconst socket = io('http://localhost:5000');\n\nconst Board = () => {\n    const [board, setBoard] = useState([]);\n\n    useEffect(() => {\n        fetchBoardState();\n\n        socket.on('board_update', data => {\n            setBoard(data.board);\n        });\n\n        socket.on('invalid_move', error => {\n            console.error('Invalid move:', error);\n            // Handle invalid move feedback to the user\n        });\n\n        return () => {\n            socket.disconnect();\n        };\n    }, []);\n\n    const fetchBoardState = async () => {\n        try {\n            const response = await fetch('http://localhost:5000/board');\n            const data = await response.json();\n            setBoard(data.board);\n        } catch (error) {\n            console.error('Error fetching board state:', error);\n        }\n    };\n\n    const handleSquareClick = async (row, col) => {\n        socket.emit('move', { source: `${selectedSquare.row}-${selectedSquare.col}`, target: `${row}-${col}` });\n    };\n\n    return (\n        <div className=\"board\">\n            {board.map((row, rowIndex) => (\n                <div key={rowIndex} className=\"row\">\n                    {row.map((piece, colIndex) => (\n                        <div\n                            key={`${rowIndex}-${colIndex}`}\n                            className=\"square\"\n                            onClick={() => handleSquareClick(rowIndex, colIndex)}\n                        >\n                            {piece}\n                        </div>\n                    ))}\n                </div>\n            ))}\n        </div>\n    );\n};\n\nexport default Board;\n"],"mappings":";;AAAA;AACA,OAAOA,KAAK,IAAIC,QAAQ,EAAEC,SAAS,QAAQ,OAAO;AAClD,OAAOC,EAAE,MAAM,kBAAkB;AAAC,SAAAC,MAAA,IAAAC,OAAA;AAElC,MAAMC,MAAM,GAAGH,EAAE,CAAC,uBAAuB,CAAC;AAE1C,MAAMI,KAAK,GAAGA,CAAA,KAAM;EAAAC,EAAA;EAChB,MAAM,CAACC,KAAK,EAAEC,QAAQ,CAAC,GAAGT,QAAQ,CAAC,EAAE,CAAC;EAEtCC,SAAS,CAAC,MAAM;IACZS,eAAe,CAAC,CAAC;IAEjBL,MAAM,CAACM,EAAE,CAAC,cAAc,EAAEC,IAAI,IAAI;MAC9BH,QAAQ,CAACG,IAAI,CAACJ,KAAK,CAAC;IACxB,CAAC,CAAC;IAEFH,MAAM,CAACM,EAAE,CAAC,cAAc,EAAEE,KAAK,IAAI;MAC/BC,OAAO,CAACD,KAAK,CAAC,eAAe,EAAEA,KAAK,CAAC;MACrC;IACJ,CAAC,CAAC;IAEF,OAAO,MAAM;MACTR,MAAM,CAACU,UAAU,CAAC,CAAC;IACvB,CAAC;EACL,CAAC,EAAE,EAAE,CAAC;EAEN,MAAML,eAAe,GAAG,MAAAA,CAAA,KAAY;IAChC,IAAI;MACA,MAAMM,QAAQ,GAAG,MAAMC,KAAK,CAAC,6BAA6B,CAAC;MAC3D,MAAML,IAAI,GAAG,MAAMI,QAAQ,CAACE,IAAI,CAAC,CAAC;MAClCT,QAAQ,CAACG,IAAI,CAACJ,KAAK,CAAC;IACxB,CAAC,CAAC,OAAOK,KAAK,EAAE;MACZC,OAAO,CAACD,KAAK,CAAC,6BAA6B,EAAEA,KAAK,CAAC;IACvD;EACJ,CAAC;EAED,MAAMM,iBAAiB,GAAG,MAAAA,CAAOC,GAAG,EAAEC,GAAG,KAAK;IAC1ChB,MAAM,CAACiB,IAAI,CAAC,MAAM,EAAE;MAAEC,MAAM,EAAE,GAAGC,cAAc,CAACJ,GAAG,IAAII,cAAc,CAACH,GAAG,EAAE;MAAEI,MAAM,EAAE,GAAGL,GAAG,IAAIC,GAAG;IAAG,CAAC,CAAC;EAC3G,CAAC;EAED,oBACIjB,OAAA;IAAKsB,SAAS,EAAC,OAAO;IAAAC,QAAA,EACjBnB,KAAK,CAACoB,GAAG,CAAC,CAACR,GAAG,EAAES,QAAQ,kBACrBzB,OAAA;MAAoBsB,SAAS,EAAC,KAAK;MAAAC,QAAA,EAC9BP,GAAG,CAACQ,GAAG,CAAC,CAACE,KAAK,EAAEC,QAAQ,kBACrB3B,OAAA;QAEIsB,SAAS,EAAC,QAAQ;QAClBM,OAAO,EAAEA,CAAA,KAAMb,iBAAiB,CAACU,QAAQ,EAAEE,QAAQ,CAAE;QAAAJ,QAAA,EAEpDG;MAAK,GAJD,GAAGD,QAAQ,IAAIE,QAAQ,EAAE;QAAAE,QAAA,EAAAC,YAAA;QAAAC,UAAA;QAAAC,YAAA;MAAA,OAK7B,CACR;IAAC,GATIP,QAAQ;MAAAI,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OAUb,CACR;EAAC;IAAAH,QAAA,EAAAC,YAAA;IAAAC,UAAA;IAAAC,YAAA;EAAA,OACD,CAAC;AAEd,CAAC;AAAC7B,EAAA,CAnDID,KAAK;AAAA+B,EAAA,GAAL/B,KAAK;AAqDX,eAAeA,KAAK;AAAC,IAAA+B,EAAA;AAAAC,YAAA,CAAAD,EAAA","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}